"
" VIM RC to be used so VIM act as a replacement for less.
"
" Put it in ~/.vim/rc.less.
"
" To replace less if you use ZSH, put this in your ~/.zshrc:
"
" less()
" {
"   if [ $# -eq 0 ]
"   then
"     view -u ~/.vim/rc.less -
"   else
"     view -u ~/.vim/rc.less "$@"
"   fi
" }
"
" And this to use VIM as a pager when calling man:
"
" export MANPAGER="sh -c 'col -x -b | view -u ~/.vim/rc.less -c \"set ft=man\" -'"
"

source ~/.vimrc

" Key bindings. {{{

map b <C-b><C-g>
map q :qa<CR>
map <space> <C-f><C-g>

" }}}

set hlsearch
set readonly
set nonumber
set foldcolumn=0

" Options parsing. {{{

let g:vless_opt_F=0

for opt in split($VLESS_OPT)
  if opt ==# '-F'
    let g:vless_opt_F=1
  endif
endfor

" }}}

" Emulate less -F option. {{{

if g:vless_opt_F

  let g:vless_orig_laststatus=&laststatus

  set laststatus=0

  function QuitIfWholeBufferVisible()

    let blines=line('$')

    if blines <= winheight(0) && (blines + 1) <= &lines
      redraw
      q
    endif

    let &laststatus=g:vless_orig_laststatus
    unlet g:vless_orig_laststatus

    augroup vless
      autocmd!
    augroup END

  endfunction

  augroup vless
    if 1 == argc()
      autocmd BufWinEnter * call QuitIfWholeBufferVisible()
    endif
  augroup END

endif

" }}}

" vim: ft=vim sw=2 foldmethod=marker
