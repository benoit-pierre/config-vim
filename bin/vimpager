#! /usr/bin/env ruby

require 'tempfile'

$VERSION = '0.8.0'

$DEBUG = false

if $DEBUG

  require 'pp'

  def dbg(hdr, obj)
    STDERR.print '%s: ' % hdr
    PP.pp(obj, out=STDERR)
  end

else

  def dbg(hdr, obj)
  end

end

squeeze_blank_lines = false
no_alternate_screen = false
quit_if_one_screen = false
man_page = false
gui = false

ARGV.collect! do |arg|

  next arg unless '-' == arg[0]

  opts = arg[1..-1]
  if '-' == opts[0]
    # --: stop options parsing.
    break if 1 == opts.size
    # Long option.
    opts = [ opts ]
  else
    # -: stdin.
    next '-' if 0 == opts.size
    # Short option(s).
    opts = opts.chars
  end

  opts.collect! do |o| case o
  when 'g'
    gui = true
    nil
  when 's'
    squeeze_blank_lines = true
    nil
  when 'X'
    no_alternate_screen = true
    nil
  when 'F'
    quit_if_one_screen = true
    nil
  when '-version'
    puts "vimpager #{$VERSION}"
    exit 0
  when '-man'
    man_page = true
    nil
  else
    raise "unsupported option -#{o}"
  end end

  opts

end

ARGV.flatten!
ARGV.compact!
ARGV.shift if '--' == ARGV[0]

dbg(:ARGV, ARGV)

unless STDOUT.isatty

  previous_line_blank = false

  while STDIN.gets

    if squeeze_blank_lines and $_ =~ /^\s*$/
      print $_ unless previous_line_blank
      previous_line_blank = true
    else
      print $_
      previous_line_blank = false
    end

  end

  exit 0

end

VIMPAGER_RC = ENV.fetch('VIMPAGER_RC', File.join(ENV['HOME'], '.vim', 'rc.pager'))

unless File.readable?(VIMPAGER_RC)

  cmd = %w{ /usr/bin/less }
  cmd << '-s' if squeeze_blank_lines
  cmd << '-X' if no_alternate_screen
  cmd << '-F' if quit_if_one_screen
  cmd.concat(ARGV)

  dbg(:cmd, cmd)

  exec(*cmd)
  exit 255

end

if gui
  no_alternate_screen = false
  quit_if_one_screen = false
end

cmd = %w{ view -u }
cmd << VIMPAGER_RC
cmd << '-g' if gui
cmd << '-f' if gui

if man_page
  cmd << '-c'
  cmd << 'set ft=man'
end

vless_opt = []
vless_opt << '-F' if quit_if_one_screen
vless_opt << '-X' if no_alternate_screen

ENV['VLESS_OPT'] = vless_opt.join(' ') unless vless_opt.empty?

dbg(:VLESS_OPT, ENV['VLESS_OPT'])

if ARGV.empty?

  if STDIN.isatty
    STDERR.puts 'Missing filename'
    exit 0
  end

  ARGV << '-'

end

stdin_file = nil

ARGV.collect! do |arg|

  next arg unless arg == '-'

  stdin_file = Tempfile.open('stdin-')

  pid = fork {

    STDOUT.reopen(stdin_file)

    child_cmd = %w{ col -x -b }

    exec(*child_cmd)
    exit 255
  }

  Process.waitpid(pid)

  STDIN.reopen('/dev/tty')

  stdin_file.close
  stdin_file.path

end

cmd << '--'
cmd.concat(ARGV)

dbg(:cmd, cmd)

system(*cmd)

stdin_file.unlink if stdin_file

exit $?.to_i >> 8

