
language C

" Not VI compatible.
set nocompatible

" No wrapping.
set nowrap

" Show line numbers.
set number
set numberwidth=5

" Allow backspacing over everything in insert mode.
set backspace=2

" Use status line to display possible completions.
set wildmenu
set wildmode=list:longest,full

" Change the select/visual mode behavior.
behave xterm
set selectmode=key
set keymodel=startsel

" Syntax highlighting.
syntax on

" Load specific term keys setting.
" Needed for some mappings to work properly.
if !has("gui_running")
  let keys=$USERVIM."/keys/".$TERM
  if filereadable(keys)
    execute "source " . keys
  endif
endif

" To update a ctags database.
nmap <unique> <Leader>tU :exe "silent! !ctags --c-kinds=+cdefgmnpstuvx --fields=+S -R -o tags ."<CR>

" Ctags list plugin config.
let Tlist_Enable_Fold_Column = 0
let Tlist_Sort_Type = "name"
let Tlist_Show_One_File = 1
let Tlist_Show_Menu = 0
nmap <silent> <unique> <Leader>tl :exe "Tlist"\|wincmd p<CR>

" Improved completion.

set complete=.,t,i,k

function! CleverTab()
  let to_pos=strpart(getline('.'), 0, col('.') - 1 )
  let from_pos=strpart(getline('.'), col('.') - 2, col('$'))
  if to_pos =~ '^\s*#\s*include'
    if to_pos =~ '^\s*#\s*include\s*$'
      return " \"\<C-X>\<C-F>\"\<Left>"
    endif
    return "\<C-X>\<C-F>"
  elseif from_pos =~ '^\k'
    return "\<C-P>"
  endif
  return "\<Tab>"
endfunction
inoremap <Tab> <C-R>=CleverTab()<CR>

function! SCleverTab()
  let to_pos=strpart(getline('.'), 0, col('.') - 1 )
  let from_pos=strpart(getline('.'), col('.') - 2, col('$'))
  if from_pos =~ '^\k'
    return "\<C-N>"
  endif
  return "\<Tab>"
endfunction
inoremap <S-Tab> <C-R>=SCleverTab()<CR>

inoremap <C-]> <C-x><C-]>
inoremap <C-f> <C-x><C-f>
inoremap <C-d> <C-x><C-d>
inoremap <C-l> <C-x><C-l>
inoremap <C-k> <C-x><C-k>

" Mappings for mark plugin.
nmap <unique> <silent> <leader>mm <Plug>MarkSet
vmap <unique> <silent> <leader>mm <Plug>MarkSet
nmap <unique> <silent> <leader>mr <Plug>MarkRegex
vmap <unique> <silent> <leader>mr <Plug>MarkRegex
nmap <unique> <silent> <leader>mn <Plug>MarkClear

" Have vimball put file in $USERVIM.
let g:vimball_home=$USERVIM

" vim: ft=vim sw=2
